server:
    port: 8100

eureka:
    client:
        serviceUrl:
            defaultZone: http://${HOSTNAME:localhost}:8010/eureka
        register-with-eureka: true
        fetch-registry: true

## Enable service discovery (with Eureka)
## lower-case-service-id is mandatory, otherwise is retrieved in upper case from Eureka
spring:
    application:
        name: gateway
    cloud:
        gateway:
            routes:
                - id: microservice_catalogue_books
                  uri: lb://microservice_catalogue_books
                  predicates:
                      - Path=/books/**


            discovery:
                locator:
                    enabled: true
                    lower-case-service-id: true
            default-filters:
                - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            globalcors: ## CORS Configuration
                cors-configurations:
                    '[/**]': ## For all routes
                        allowedOrigins: ${ALLOWED_ORIGINS:*} # With '*' we allow all origins. We can restrict by indicating domains or ip + port, e.g. http://localhost:3000 (where our front is, or a Vercel domain)
                        allowedHeaders: "*" ## All headers allowed
                        allowedMethods:
                            - GET
                            - POST
                            - PUT
                            - DELETE
                            - PATCH


## We enable the Actuator API to be able to access <<host>>/actuator/gateway/routes
## We expose the routings that have been automatically detected (all)
## Depending on the ROUTE_TABLES_ENABLED environment variable (true by default)
management:
    endpoint:
        gateway:
            enabled: ${ROUTE_TABLES_ENABLED:true}
    endpoints:
        web:
            exposure:
                include:
                    - '*'


logging:
    level:
        root: info
        org:
            springframework:
                cloud:
                    gateway: trace
                    route:
                        RouteDefinitionRouteLocator: info
